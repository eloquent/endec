var search_data = {
    'index': {
        'searchIndex': ["eloquent","eloquent\\endec","eloquent\\endec\\encoding","eloquent\\endec\\encoding\\base64","eloquent\\endec\\encoding\\exception","eloquent\\endec\\encoding\\hex","eloquent\\endec\\transform","eloquent\\endec\\transform\\exception","eloquent\\endec\\encoding\\base64\\base64decoder","eloquent\\endec\\encoding\\base64\\base64encoder","eloquent\\endec\\encoding\\exception\\invalidencodeddataexception","eloquent\\endec\\encoding\\hex\\hexdecoder","eloquent\\endec\\encoding\\hex\\hexencoder","eloquent\\endec\\transform\\abstractdatatransform","eloquent\\endec\\transform\\datatransforminterface","eloquent\\endec\\transform\\exception\\transformexceptioninterface","eloquent\\endec\\encoding\\exception\\invalidencodeddataexception::__construct","eloquent\\endec\\encoding\\exception\\invalidencodeddataexception::encoding","eloquent\\endec\\encoding\\exception\\invalidencodeddataexception::data","eloquent\\endec\\transform\\abstractdatatransform::__construct","eloquent\\endec\\transform\\abstractdatatransform::buffersize","eloquent\\endec\\transform\\abstractdatatransform::transform","eloquent\\endec\\transform\\abstractdatatransform::iswritable","eloquent\\endec\\transform\\abstractdatatransform::isreadable","eloquent\\endec\\transform\\abstractdatatransform::write","eloquent\\endec\\transform\\abstractdatatransform::end","eloquent\\endec\\transform\\abstractdatatransform::close","eloquent\\endec\\transform\\abstractdatatransform::pause","eloquent\\endec\\transform\\abstractdatatransform::resume","eloquent\\endec\\transform\\abstractdatatransform::pipe","eloquent\\endec\\transform\\datatransforminterface::transform"],
        'info': [["Eloquent","","Eloquent.html","","",3],["Eloquent\\Endec","","Eloquent\/Endec.html","","",3],["Eloquent\\Endec\\Encoding","","Eloquent\/Endec\/Encoding.html","","",3],["Eloquent\\Endec\\Encoding\\Base64","","Eloquent\/Endec\/Encoding\/Base64.html","","",3],["Eloquent\\Endec\\Encoding\\Exception","","Eloquent\/Endec\/Encoding\/Exception.html","","",3],["Eloquent\\Endec\\Encoding\\Hex","","Eloquent\/Endec\/Encoding\/Hex.html","","",3],["Eloquent\\Endec\\Transform","","Eloquent\/Endec\/Transform.html","","",3],["Eloquent\\Endec\\Transform\\Exception","","Eloquent\/Endec\/Transform\/Exception.html","","",3],["Base64Decoder","Eloquent\\Endec\\Encoding\\Base64","Eloquent\/Endec\/Encoding\/Base64\/Base64Decoder.html"," < AbstractDataTransform","Decodes data using base64 encoding.",1],["Base64Encoder","Eloquent\\Endec\\Encoding\\Base64","Eloquent\/Endec\/Encoding\/Base64\/Base64Encoder.html"," < AbstractDataTransform","Encodes data using base64 encoding.",1],["InvalidEncodedDataException","Eloquent\\Endec\\Encoding\\Exception","Eloquent\/Endec\/Encoding\/Exception\/InvalidEncodedDataException.html"," < Exception","The supplied data is not correctly encoded.",1],["HexDecoder","Eloquent\\Endec\\Encoding\\Hex","Eloquent\/Endec\/Encoding\/Hex\/HexDecoder.html"," < AbstractDataTransform","Decodes data using hexadecimal encoding.",1],["HexEncoder","Eloquent\\Endec\\Encoding\\Hex","Eloquent\/Endec\/Encoding\/Hex\/HexEncoder.html"," < AbstractDataTransform","Encodes data using hexadecimal encoding.",1],["AbstractDataTransform","Eloquent\\Endec\\Transform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html","","An abstract base class for implementing data transforms.",1],["DataTransformInterface","Eloquent\\Endec\\Transform","Eloquent\/Endec\/Transform\/DataTransformInterface.html","","The interface implemented by data transforms.",1],["TransformExceptionInterface","Eloquent\\Endec\\Transform\\Exception","Eloquent\/Endec\/Transform\/Exception\/TransformExceptionInterface.html","","The interface used to identify transform exceptions.",1],["InvalidEncodedDataException::__construct","Eloquent\\Endec\\Encoding\\Exception\\InvalidEncodedDataException","Eloquent\/Endec\/Encoding\/Exception\/InvalidEncodedDataException.html#method___construct","(string $encoding, string|null $data = null, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new invalid encoded data exception.",2],["InvalidEncodedDataException::encoding","Eloquent\\Endec\\Encoding\\Exception\\InvalidEncodedDataException","Eloquent\/Endec\/Encoding\/Exception\/InvalidEncodedDataException.html#method_encoding","()","Get the name of the expected encoding.",2],["InvalidEncodedDataException::data","Eloquent\\Endec\\Encoding\\Exception\\InvalidEncodedDataException","Eloquent\/Endec\/Encoding\/Exception\/InvalidEncodedDataException.html#method_data","()","Get the invalid data.",2],["AbstractDataTransform::__construct","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method___construct","(integer|null $bufferSize = null)","Construct a new data transform.",2],["AbstractDataTransform::bufferSize","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_bufferSize","()","Get the buffer size.",2],["AbstractDataTransform::transform","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_transform","(string $data)","Transform the supplied data synchronously.",2],["AbstractDataTransform::isWritable","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_isWritable","()","Returns true if this transform is writable.",2],["AbstractDataTransform::isReadable","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_isReadable","()","Returns true if this transform is readable.",2],["AbstractDataTransform::write","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_write","(string $data)","Write some data to this transform.",2],["AbstractDataTransform::end","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_end","(string|null $data = null)","Transform and finalize any remaining buffered data.",2],["AbstractDataTransform::close","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_close","()","Close this transform.",2],["AbstractDataTransform::pause","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_pause","()","Pause this transform.",2],["AbstractDataTransform::resume","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_resume","()","Resume this transform.",2],["AbstractDataTransform::pipe","Eloquent\\Endec\\Transform\\AbstractDataTransform","Eloquent\/Endec\/Transform\/AbstractDataTransform.html#method_pipe","(<abbr title=\"React\\Stream\\WritableStreamInterface\">WritableStreamInterface<\/abbr> $destination, array $options = array())","Pipe the output of this transform to another stream.",2],["DataTransformInterface::transform","Eloquent\\Endec\\Transform\\DataTransformInterface","Eloquent\/Endec\/Transform\/DataTransformInterface.html#method_transform","(string $data)","Transform the supplied data synchronously.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']